{"version":3,"file":"PeppyAlsaPipePluginListener.js","sourceRoot":"","sources":["../../../src/lib/config/PeppyAlsaPipePluginListener.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAAkC;AAClC,6EAAsC;AAEtC,MAAM,sCAAsC,GAAG,gCAAgC,CAAC;AAEhF,MAAa,2BAA4B,SAAQ,gBAAY;IAM3D;QACE,KAAK,EAAE,CAAC;;QALV,sDAA+B;QAC/B,qEAA6C;QAK3C,uBAAA,IAAI,sDAA0B,uBAAA,IAAI,iGAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAA,CAAC;QACpE,uBAAA,2BAA2B,MAAiB,uBAAA,IAAI,qGAA0B,MAA9B,IAAI,CAA4B,iDAAA,CAAC;IAC/E,CAAC;IAkBD,MAAM,CAAC,WAAW;QAChB,OAAO,uBAAA,IAAI,qDAAc,CAAC;IAC5B,CAAC;IAWD,KAAK;QACH,IAAI,uBAAA,IAAI,2CAAQ,KAAK,SAAS,EAAE;YAC9B,OAAO;SACR;QAED,2BAAE,CAAC,oBAAoB,EAAE,CAAC,gBAAgB,CAAC,sCAAsC,EAAE,uBAAA,IAAI,0DAAuB,CAAC,CAAC;QAChH,uBAAA,IAAI,uCAAW,SAAS,MAAA,CAAC;IAC3B,CAAC;IAED,IAAI;QACF,IAAI,uBAAA,IAAI,2CAAQ,KAAK,SAAS,EAAE;YAC9B,OAAO;SACR;QAED,2BAAE,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,sCAAsC,EAAE,uBAAA,IAAI,0DAAuB,CAAC,CAAC;QAChH,uBAAA,IAAI,uCAAW,SAAS,MAAA,CAAC;IAC3B,CAAC;IAGD,EAAE,CAAC,KAAsB,EAAE,QAAkC;QAC3D,OAAO,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACnC,CAAC;CACF;AA/DD,kEA+DC;0UAnD2B,KAAW;IACnC,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,KAAK,GAAG,2BAAE,CAAC,oBAAoB,EAAE,CAAC,GAAG,CAAC,sCAAsC,EAAE,IAAI,CAAC,CAAC;KACrF;IACD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IACD,IAAI;QACF,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClC,OAAO,OAAO,EAAE,SAAS,EAAE,KAAK,IAAI,IAAI,CAAC;KAC1C;IACD,OAAO,KAAK,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;AACH,CAAC,iHAMqB,KAAU;IAC9B,MAAM,QAAQ,GAAG,uBAAA,IAAI,qGAA0B,MAA9B,IAAI,EAA2B,KAAK,CAAC,CAAC;IACvD,IAAI,QAAQ,KAAK,uBAAA,2BAA2B,qDAAc,EAAE;QAC1D,2BAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,gEAAgE,QAAQ,EAAE,CAAC,CAAC;QAChG,uBAAA,2BAA2B,MAAiB,QAAQ,iDAAA,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;KACvC;AACH,CAAC;AAnCM,8DAA6B","sourcesContent":["import EventEmitter from 'events';\nimport pm from '../PeppyMeterContext';\n\nconst PEPPY_ALSA_PIPE_EXPORTS_SHARED_VAR_KEY = 'plugin.peppy_alsa_pipe.exports';\n\nexport class PeppyAlsaPipePluginListener extends EventEmitter {\n\n  #status: 'started' | 'stopped';\n  #fifoPathChangeHandler: (value: any) => void;\n  static #lastFIFOPath: string | null;\n\n  constructor() {\n    super();\n    this.#fifoPathChangeHandler = this.#handleFIFOPathChange.bind(this);\n    PeppyAlsaPipePluginListener.#lastFIFOPath = this.#getFIFOPathFromSharedVar();\n  }\n\n  #getFIFOPathFromSharedVar(value?: any) {\n    if (value === undefined) {\n      value = pm.getVolumioSharedVars().get(PEPPY_ALSA_PIPE_EXPORTS_SHARED_VAR_KEY, null);\n    }\n    if (!value) {\n      return null;\n    }\n    try {\n      const exports = JSON.parse(value);\n      return exports?.fifoPaths?.meter || null;\n    }\n    catch (error) {\n      return null;\n    }\n  }\n\n  static getFIFOPath() {\n    return this.#lastFIFOPath;\n  }\n\n  #handleFIFOPathChange(value: any) {\n    const fifoPath = this.#getFIFOPathFromSharedVar(value);\n    if (fifoPath !== PeppyAlsaPipePluginListener.#lastFIFOPath) {\n      pm.getLogger().info(`[peppymeter] FIFO path obtained from Peppy ALSA Pipe plugin: ${fifoPath}`);\n      PeppyAlsaPipePluginListener.#lastFIFOPath = fifoPath;\n      this.emit('fifoPathChange', fifoPath);\n    }\n  }\n\n  start() {\n    if (this.#status === 'started') {\n      return;\n    }\n\n    pm.getVolumioSharedVars().registerCallback(PEPPY_ALSA_PIPE_EXPORTS_SHARED_VAR_KEY, this.#fifoPathChangeHandler);\n    this.#status = 'started';\n  }\n\n  stop() {\n    if (this.#status === 'stopped') {\n      return;\n    }\n\n    pm.getVolumioSharedVars().callbacks.delete(PEPPY_ALSA_PIPE_EXPORTS_SHARED_VAR_KEY, this.#fifoPathChangeHandler);\n    this.#status = 'stopped';\n  }\n\n  on(event: 'fifoPathChange', listener: (fifoPath: string | null) => void): this;\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.on(event, listener);\n  }\n}\n"]}