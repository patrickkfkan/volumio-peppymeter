{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport vconf from 'v-conf';\n\nimport pm from './lib/PeppyMeterContext';\nimport { jsPromiseToKew, kewToJSPromise } from './lib/utils/Misc';\nimport MeterTemplateMonitor from './lib/MeterTemplateMonitor';\nimport PeppyMeterConfig from './lib/config/PeppyMeterConfig';\nimport UIConfigHelper from './lib/config/UIConfigHelper';\nimport { UIConfigSelect } from './lib/config/UIConfig';\nimport PeppyMeter from './lib/PeppyMeter';\nimport { PeppyAlsaPipePluginListener } from './lib/config/PeppyAlsaPipePluginListener';\nimport { FontConfig } from './lib/config/PluginConfig';\nimport { PREDEFINED_FONTS } from './lib/utils/Constants';\nimport { FontHelper } from './lib/utils/FontHelper';\n\nclass ControllerPeppyAlsaPipe {\n\n  #context: any;\n  #config: any;\n  #commandRouter: any;\n  #meterTemplateMonitor: MeterTemplateMonitor | null;\n  #peppyAlsaPipePluginListener: PeppyAlsaPipePluginListener | null;\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = this.#context.coreCommand;\n    this.#meterTemplateMonitor = null;\n    this.#peppyAlsaPipePluginListener = null;\n  }\n\n  getUIConfig() {\n    return jsPromiseToKew(this.#doGetUIConfig())\n      .fail((error: any) => {\n        pm.getLogger().error(\n          pm.getErrorMessage('[peppymeter] getUIConfig(): Cannot populate configuration:', error));\n        throw error;\n      });\n  }\n\n  async #doGetUIConfig() {\n    if (!this.#meterTemplateMonitor) {\n      throw Error('MeterTemplateMonitor not initialized');\n    }\n\n    const langCode = this.#commandRouter.sharedVars.get('language_code');\n    const _uiconf = await kewToJSPromise(this.#commandRouter.i18nJson(\n      `${__dirname}/i18n/strings_${langCode}.json`,\n      `${__dirname}/i18n/strings_en.json`,\n      `${__dirname}/UIConfig.json`));\n    const uiconf = UIConfigHelper.observe(_uiconf);\n\n    const meterUIConf = uiconf.section_meter_settings;\n\n    /**\n     * Meter conf\n     */\n    if (this.#meterTemplateMonitor.status === 'initializing' || this.#meterTemplateMonitor.status === 'updating') {\n      pm.toast('warning', pm.getI18n('PEPPYMETER_METER_MONITOR_UPDATING'));\n    }\n\n    const template = pm.getConfigValue('template');\n    const meter = pm.getConfigValue('meter');\n    const fontConfig = pm.getConfigValue('font');\n    const fifoPathConfig = pm.getConfigValue('fifoPath');\n\n    meterUIConf.content.startDelay.value = pm.getConfigValue('startDelay');\n    meterUIConf.content.template.value = {\n      value: template,\n      label: template\n    };\n    meterUIConf.content.randomInterval.value = pm.getConfigValue('randomInterval');\n    meterUIConf.content.useCache.value = pm.getConfigValue('useCache');\n    meterUIConf.content.smoothBufferSize.value = pm.getConfigValue('smoothBufferSize');\n    meterUIConf.content.mouseSupport.value = pm.getConfigValue('mouseSupport');\n\n    const selectedFont = FontHelper.getFontDefByConfig(fontConfig) || PREDEFINED_FONTS[0];\n    meterUIConf.content.font.value = {\n      value: `${selectedFont.type}.${selectedFont.id}`,\n      label: selectedFont.name\n    };\n    meterUIConf.content.font.options = PREDEFINED_FONTS.map((f) => ({\n      value: `${f.type}.${f.id}`,\n      label: f.name\n    }));\n\n    let fifoPathTypeLabel = '';\n    switch (fifoPathConfig.type) {\n      case 'peppyAlsaPlugin':\n        fifoPathTypeLabel = pm.getI18n('PEPPYMETER_FIFO_PATH_TYPE_PAP');\n        break;\n      case 'manual':\n        fifoPathTypeLabel = pm.getI18n('PEPPYMETER_FIFO_PATH_TYPE_MANUAL');\n        break;\n    }\n    meterUIConf.content.fifoPathType.value = {\n      value: fifoPathConfig.type,\n      label: fifoPathTypeLabel\n    };\n    meterUIConf.content.fifoPath.value = fifoPathConfig.path;\n\n    const meterTemplates = this.#meterTemplateMonitor.getTemplates();\n    if (meterTemplates.length > 0) {\n\n      const meterSelectElements: UIConfigSelect<any>[] = [];\n\n      meterTemplates.forEach((t) => {\n        meterUIConf.content.template.options.push({\n          value: t.name,\n          label: t.name\n        });\n\n        // Create UIConfig `select` element for template's meters\n        const meterSelectElement: UIConfigSelect<any> = {\n          id: `${t.name}.meter` as any,\n          element: 'select',\n          label: pm.getI18n('PEPPYMETER_METER'),\n          options: [],\n          value: {\n            value: '',\n            label: ''\n          },\n          visibleIf: {\n            field: 'template',\n            value: t.name\n          }\n        };\n        let selectedMeter = '';\n        if (t.name === template && t.meters.find((m) => m === meter)) {\n          selectedMeter = meter.toString();\n        }\n        if (selectedMeter) {\n          meterSelectElement.value = ({\n            value: selectedMeter,\n            label: selectedMeter\n          });\n        }\n        else {\n          meterSelectElement.value = ({\n            value: 'random',\n            label: pm.getI18n('PEPPYMETER_RANDOM')\n          });\n        }\n\n        meterSelectElement.options.push(\n          {\n            value: 'random',\n            label: pm.getI18n('PEPPYMETER_RANDOM')\n          },\n          {\n            value: '/SEPARATOR/',\n            label: '-'.repeat(pm.getI18n('PEPPYMETER_RANDOM').length)\n          },\n          ...t.meters.map((m) => ({\n            value: m,\n            label: m\n          }))\n        );\n\n        meterSelectElements.push(meterSelectElement);\n\n        if (meterUIConf.saveButton) {\n          meterUIConf.saveButton.data.push(meterSelectElement.id as any);\n        }\n      });\n      const insertIndex = meterUIConf.content.findIndex((c: any) => c.id === 'template') + 1;\n      meterUIConf.content.splice(insertIndex, 0, ...meterSelectElements);\n    }\n\n    return uiconf;\n  }\n\n  getConfigurationFiles() {\n    return [ 'config.json' ];\n  }\n\n  /**\n   * Plugin lifecycle\n   */\n\n  onVolumioStart() {\n    const configFile = this.#commandRouter.pluginManager.getConfigurationFile(this.#context, 'config.json');\n    this.#config = new vconf();\n    this.#config.loadFile(configFile);\n    return libQ.resolve(true);\n  }\n\n  onStart() {\n    return jsPromiseToKew<void>((async () => {\n      pm.init(this.#context, this.#config);\n      this.#meterTemplateMonitor = new MeterTemplateMonitor();\n      this.#meterTemplateMonitor.start();\n      PeppyMeterConfig.load();\n      PeppyMeter.enable();\n      this.#initPeppyAlsaPipePluginListener();\n    })());\n  }\n\n  onStop() {\n    return jsPromiseToKew<void>((async () => {\n      this.#destroyPeppyAlsaPipePluginListener();\n      await PeppyMeter.disable();\n      PeppyMeterConfig.unload();\n      if (this.#meterTemplateMonitor) {\n        await this.#meterTemplateMonitor.stop();\n        this.#meterTemplateMonitor = null;\n      }\n      pm.reset();\n    })());\n  }\n\n  #initPeppyAlsaPipePluginListener() {\n    if (this.#peppyAlsaPipePluginListener) {\n      this.#destroyPeppyAlsaPipePluginListener();\n    }\n    this.#peppyAlsaPipePluginListener = new PeppyAlsaPipePluginListener();\n    this.#peppyAlsaPipePluginListener.on('fifoPathChange', async () => {\n      if (pm.getConfigValue('fifoPath').type === 'peppyAlsaPlugin') {\n        await PeppyMeter.restart({ policy: 'configChanged' });\n      }\n    });\n    this.#peppyAlsaPipePluginListener.start();\n  }\n\n  #destroyPeppyAlsaPipePluginListener() {\n    if (this.#peppyAlsaPipePluginListener) {\n      this.#peppyAlsaPipePluginListener.removeAllListeners();\n      this.#peppyAlsaPipePluginListener.stop();\n      this.#peppyAlsaPipePluginListener = null;\n    }\n  }\n\n  /**\n   * Config\n   */\n\n  #parseConfigSaveData(data: object) {\n    const parsed: Record<string, any> = {};\n    for (const [ key, value ] of Object.entries(data)) {\n      // Check if dropdown selection\n      if (typeof value === 'object' && value && Reflect.has(value, 'value')) {\n        parsed[key] = value.value;\n      }\n      else {\n        parsed[key] = value;\n      }\n    }\n    return parsed;\n  }\n\n  async configSaveMeterSettings(data: Record<string, any>) {\n    const parsed = this.#parseConfigSaveData(data);\n\n    if (parsed.startDelay < 0) {\n      pm.toast('error', pm.getI18n('PEPPYMETER_ERR_INVALID_START_DELAY'));\n      return;\n    }\n    const meterKey = `${parsed.template}.meter`;\n    if (parsed[meterKey] === '/SEPARATOR/') {\n      pm.toast('error', pm.getI18n('PEPPYMETER_ERR_INVALID_METER'));\n      return;\n    }\n\n    const font = parsed.font as string;\n    const fontType = font.startsWith('user.') ? 'user' : 'predefined';\n    const fontId = font.substring(fontType.length + 1);\n    const fontConfig: FontConfig = {\n      type: fontType,\n      id: fontId\n    };\n\n    const fifoPathConfig = {\n      type: parsed.fifoPathType,\n      path: parsed.fifoPath\n    };\n\n    try {\n      PeppyMeterConfig.set('template', parsed.template);\n      PeppyMeterConfig.set('meter', parsed[meterKey]);\n      PeppyMeterConfig.set('randomInterval', parsed.randomInterval);\n      PeppyMeterConfig.set('useCache', parsed.useCache);\n      PeppyMeterConfig.set('smoothBufferSize', parsed.smoothBufferSize);\n      PeppyMeterConfig.set('mouseSupport', parsed.mouseSupport);\n      PeppyMeterConfig.set('font', fontConfig);\n      PeppyMeterConfig.set('fifoPath', fifoPathConfig);\n    }\n    catch (error) {\n      pm.toast('error', pm.getErrorMessage('', error, false));\n      return;\n    }\n\n    pm.setConfigValue('startDelay', parsed.startDelay);\n    pm.setConfigValue('template', parsed.template);\n    pm.setConfigValue('meter', parsed[meterKey]);\n    pm.setConfigValue('randomInterval', parsed.randomInterval);\n    pm.setConfigValue('useCache', parsed.useCache);\n    pm.setConfigValue('smoothBufferSize', parsed.smoothBufferSize);\n    pm.setConfigValue('mouseSupport', parsed.mouseSupport);\n    pm.setConfigValue('font', fontConfig);\n    pm.setConfigValue('fifoPath', fifoPathConfig);\n\n    pm.toast('success', pm.getI18n('PEPPYMETER_SETTINGS_SAVED'));\n\n    if (PeppyMeter.isRunning()) {\n      await PeppyMeter.restart({ policy: 'configChanged' });\n    }\n  }\n\n}\n\nexport = ControllerPeppyAlsaPipe;\n"]}