{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport vconf from 'v-conf';\n\nimport pm from './lib/PeppyMeterContext';\nimport { jsPromiseToKew, kewToJSPromise } from './lib/utils/Misc';\nimport PeppyMeterConfig from './lib/config/PeppyMeterConfig';\nimport UIConfigHelper from './lib/config/UIConfigHelper';\nimport PeppyMeter from './lib/PeppyMeter';\nimport { PeppyAlsaPipePluginListener } from './lib/config/PeppyAlsaPipePluginListener';\nimport { FontConfig, ScreenSizeConfig } from './lib/config/PluginConfig';\nimport { PREDEFINED_FONTS } from './lib/utils/Constants';\nimport { FontHelper } from './lib/utils/FontHelper';\nimport { getMeterList, getTemplateFolderList } from './lib/utils/MeterTemplate';\n\nclass ControllerPeppyAlsaPipe {\n\n  #context: any;\n  #config: any;\n  #commandRouter: any;\n  #peppyAlsaPipePluginListener: PeppyAlsaPipePluginListener | null;\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = this.#context.coreCommand;\n    this.#peppyAlsaPipePluginListener = null;\n  }\n\n  getUIConfig() {\n    return jsPromiseToKew(this.#doGetUIConfig())\n      .fail((error: any) => {\n        pm.getLogger().error(\n          pm.getErrorMessage('[peppymeter] getUIConfig(): Cannot populate configuration:', error));\n        throw error;\n      });\n  }\n\n  async #doGetUIConfig() {\n    const langCode = this.#commandRouter.sharedVars.get('language_code');\n    const _uiconf = await kewToJSPromise(this.#commandRouter.i18nJson(\n      `${__dirname}/i18n/strings_${langCode}.json`,\n      `${__dirname}/i18n/strings_en.json`,\n      `${__dirname}/UIConfig.json`));\n    const uiconf = UIConfigHelper.observe(_uiconf);\n\n    const generalUIConf = uiconf.section_general_settings;\n    const meterUIConf = uiconf.section_meter_settings;\n\n    const meterTemplates = await getTemplateFolderList();\n\n    /**\n     * General conf\n     */\n    const template = pm.getConfigValue('template');\n    const screenSize = pm.getConfigValue('screenSize');\n    const fontConfig = pm.getConfigValue('font');\n    const fifoPathConfig = pm.getConfigValue('fifoPath');\n\n    generalUIConf.content.startDelay.value = pm.getConfigValue('startDelay');\n    generalUIConf.content.template.value = {\n      value: template,\n      label: template\n    };\n    generalUIConf.content.template.options = meterTemplates.map((t) => ({\n      value: t,\n      label: t\n    }));\n\n    if (screenSize.type === 'auto') {\n      generalUIConf.content.screenSize.value = {\n        value: 'auto',\n        label: pm.getI18n('PEPPYMETER_AUTO')\n      };\n    }\n    else {\n      generalUIConf.content.screenSize.value = {\n        value: 'manual',\n        label: pm.getI18n('PEPPYMETER_MANUAL')\n      };\n    }\n    generalUIConf.content.screenWidth.value = screenSize.width > 0 ? screenSize.width : '';\n    generalUIConf.content.screenHeight.value = screenSize.height > 0 ? screenSize.height : '';\n\n    generalUIConf.content.useCache.value = pm.getConfigValue('useCache');\n    generalUIConf.content.smoothBufferSize.value = pm.getConfigValue('smoothBufferSize');\n    generalUIConf.content.mouseSupport.value = pm.getConfigValue('mouseSupport');\n\n    const selectedFont = FontHelper.getFontDefByConfig(fontConfig) || PREDEFINED_FONTS[0];\n    generalUIConf.content.font.value = {\n      value: `${selectedFont.type}.${selectedFont.id}`,\n      label: selectedFont.name\n    };\n    generalUIConf.content.font.options = PREDEFINED_FONTS.map((f) => ({\n      value: `${f.type}.${f.id}`,\n      label: f.name\n    }));\n\n    let fifoPathTypeLabel = '';\n    switch (fifoPathConfig.type) {\n      case 'peppyAlsaPlugin':\n        fifoPathTypeLabel = pm.getI18n('PEPPYMETER_FIFO_PATH_TYPE_PAP');\n        break;\n      case 'manual':\n        fifoPathTypeLabel = pm.getI18n('PEPPYMETER_FIFO_PATH_TYPE_MANUAL');\n        break;\n    }\n    generalUIConf.content.fifoPathType.value = {\n      value: fifoPathConfig.type,\n      label: fifoPathTypeLabel\n    };\n    generalUIConf.content.fifoPath.value = fifoPathConfig.path;\n\n    /**\n     * Meter conf\n     */\n    const meterType = pm.getConfigValue('meterType');\n    const meter = pm.getConfigValue('meter');\n    let meterValue: string;\n    let meterLabel: string;\n    if (meterType === 'random') {\n      meterValue = 'random';\n      meterLabel = pm.getI18n('PEPPYMETER_RANDOM');\n    }\n    else if (meterType === 'list') {\n      meterValue = '/LIST/';\n      meterLabel = pm.getI18n('PEPPYMETER_LIST');\n    }\n    else {\n      meterValue = meterLabel = meter.toString();\n    }\n    meterUIConf.content.meter.value = {\n      value: meterValue,\n      label: meterLabel\n    };\n    const meters = getMeterList(template);\n    if (meters.length > 0) {\n      meterUIConf.content.meter.options.push(\n        {\n          value: 'random',\n          label: pm.getI18n('PEPPYMETER_RANDOM')\n        },\n        {\n          value: '/LIST/',\n          label: pm.getI18n('PEPPYMETER_LIST')\n        },\n        {\n          value: '/SEPARATOR/',\n          label: '-'.repeat(pm.getI18n('PEPPYMETER_RANDOM').length)\n        },\n        ...meters.map((m) => ({\n          value: m,\n          label: m\n        }))\n      );\n    }\n    if (meterType === 'list') {\n      meterUIConf.content.listMeters.value = meter.toString();\n    }\n    meterUIConf.content.randomChangeInterval.value = pm.getConfigValue('changeInterval');\n    meterUIConf.content.listChangeInterval.value = pm.getConfigValue('changeInterval');\n\n    return uiconf;\n  }\n\n  getConfigurationFiles() {\n    return [ 'config.json' ];\n  }\n\n  /**\n   * Plugin lifecycle\n   */\n\n  onVolumioStart() {\n    const configFile = this.#commandRouter.pluginManager.getConfigurationFile(this.#context, 'config.json');\n    this.#config = new vconf();\n    this.#config.loadFile(configFile);\n    return libQ.resolve(true);\n  }\n\n  onStart() {\n    return jsPromiseToKew<void>((async () => {\n      pm.init(this.#context, this.#config);\n      PeppyMeterConfig.load();\n      PeppyMeter.enable();\n      this.#initPeppyAlsaPipePluginListener();\n    })());\n  }\n\n  onStop() {\n    return jsPromiseToKew<void>((async () => {\n      this.#destroyPeppyAlsaPipePluginListener();\n      await PeppyMeter.disable();\n      PeppyMeterConfig.unload();\n      pm.reset();\n    })());\n  }\n\n  #initPeppyAlsaPipePluginListener() {\n    if (this.#peppyAlsaPipePluginListener) {\n      this.#destroyPeppyAlsaPipePluginListener();\n    }\n    this.#peppyAlsaPipePluginListener = new PeppyAlsaPipePluginListener();\n    this.#peppyAlsaPipePluginListener.on('fifoPathChange', async () => {\n      if (pm.getConfigValue('fifoPath').type === 'peppyAlsaPlugin') {\n        await PeppyMeter.restart({ policy: 'configChanged' });\n      }\n    });\n    this.#peppyAlsaPipePluginListener.start();\n  }\n\n  #destroyPeppyAlsaPipePluginListener() {\n    if (this.#peppyAlsaPipePluginListener) {\n      this.#peppyAlsaPipePluginListener.removeAllListeners();\n      this.#peppyAlsaPipePluginListener.stop();\n      this.#peppyAlsaPipePluginListener = null;\n    }\n  }\n\n  /**\n   * Config\n   */\n\n  #parseConfigSaveData(data: object) {\n    const parsed: Record<string, any> = {};\n    for (const [ key, value ] of Object.entries(data)) {\n      // Check if dropdown selection\n      if (typeof value === 'object' && value && Reflect.has(value, 'value')) {\n        parsed[key] = value.value;\n      }\n      else {\n        parsed[key] = value;\n      }\n    }\n    return parsed;\n  }\n\n  async configSaveGeneralSettings(data: Record<string, any>) {\n    const parsed = this.#parseConfigSaveData(data);\n\n    if (parsed.startDelay < 0) {\n      pm.toast('error', pm.getI18n('PEPPYMETER_ERR_INVALID_START_DELAY'));\n      return;\n    }\n    const font = parsed.font as string;\n    const fontType = font.startsWith('user.') ? 'user' : 'predefined';\n    const fontId = font.substring(fontType.length + 1);\n    const fontConfig: FontConfig = {\n      type: fontType,\n      id: fontId\n    };\n\n    const fifoPathConfig = {\n      type: parsed.fifoPathType,\n      path: parsed.fifoPath\n    };\n\n    const screenSizeConfig: ScreenSizeConfig = {\n      type: parsed.screenSize,\n      width: parsed.screenWidth !== '' ? parseInt(parsed.screenWidth, 10) : 0,\n      height: parsed.screenHeight !== '' ? parseInt(parsed.screenHeight, 10) : 0\n    };\n\n    const templateChanged = pm.getConfigValue('template') !== parsed.template;\n    try {\n      PeppyMeterConfig.set('template', parsed.template);\n      if (templateChanged) {\n        PeppyMeterConfig.set('meter', 'random');\n      }\n      PeppyMeterConfig.set('screenSize', screenSizeConfig);\n      PeppyMeterConfig.set('useCache', parsed.useCache);\n      PeppyMeterConfig.set('smoothBufferSize', parsed.smoothBufferSize);\n      PeppyMeterConfig.set('mouseSupport', parsed.mouseSupport);\n      PeppyMeterConfig.set('font', fontConfig);\n      PeppyMeterConfig.set('fifoPath', fifoPathConfig);\n    }\n    catch (error) {\n      pm.toast('error', pm.getErrorMessage('', error, false));\n      return;\n    }\n\n    pm.setConfigValue('startDelay', parsed.startDelay);\n    pm.setConfigValue('template', parsed.template);\n    if (templateChanged) {\n      pm.setConfigValue('meterType', 'random');\n      pm.setConfigValue('meter', 'random');\n    }\n    pm.setConfigValue('screenSize', screenSizeConfig);\n    pm.setConfigValue('useCache', parsed.useCache);\n    pm.setConfigValue('smoothBufferSize', parsed.smoothBufferSize);\n    pm.setConfigValue('mouseSupport', parsed.mouseSupport);\n    pm.setConfigValue('font', fontConfig);\n    pm.setConfigValue('fifoPath', fifoPathConfig);\n\n    pm.toast('success', pm.getI18n('PEPPYMETER_SETTINGS_SAVED'));\n\n    if (templateChanged) {\n      pm.refreshUIConfig();\n    }\n\n    if (PeppyMeter.isRunning()) {\n      await PeppyMeter.restart({ policy: 'configChanged' });\n    }\n  }\n\n  async configSaveMeterSettings(data: Record<string, any>) {\n    const parsed = this.#parseConfigSaveData(data);\n\n    let meterValue: string;\n    let meterType: 'random' | 'list' | 'single';\n    let changeInterval: number | null = null;\n    switch (parsed.meter) {\n      case '/SEPARATOR/':\n        pm.toast('error', pm.getI18n('PEPPYMETER_ERR_INVALID_METER'));\n        return;\n      case 'random':\n        meterValue = 'random';\n        meterType = 'random';\n        changeInterval = parsed.randomChangeInterval;\n        break;\n      case '/LIST/':\n        meterValue = parsed.listMeters.trim();\n        meterType = 'list';\n        changeInterval = parsed.listChangeInterval;\n        break;\n      default:\n        meterValue = parsed.meter;\n        meterType = 'single';\n    }\n\n    if (meterType === 'list') {\n      let validate = !!meterValue;\n      let invalidEntry: string | null = null;\n      if (validate) {\n        const meters = getMeterList(pm.getConfigValue('template'));\n        const entries = meterValue.split(',').map((m) => m.trim());\n        for (const entry of entries) {\n          if (!meters.find((m) => m === entry)) {\n            invalidEntry = entry;\n            validate = false;\n            break;\n          }\n        }\n      }\n      if (!validate) {\n        pm.toast('error', pm.getI18n('PEPPYMETER_ERR_INVALID_LIST_METERS', invalidEntry ? ` (${invalidEntry})` : ''));\n        return;\n      }\n    }\n\n    try {\n      PeppyMeterConfig.set('meter', meterValue);\n      if (changeInterval !== null) {\n        PeppyMeterConfig.set('changeInterval', changeInterval);\n      }\n    }\n    catch (error) {\n      pm.toast('error', pm.getErrorMessage('', error, false));\n      return;\n    }\n\n    pm.setConfigValue('meterType', meterType);\n    pm.setConfigValue('meter', meterValue);\n    if (changeInterval !== null) {\n      pm.setConfigValue('changeInterval', changeInterval);\n    }\n\n    pm.toast('success', pm.getI18n('PEPPYMETER_SETTINGS_SAVED'));\n\n    if (PeppyMeter.isRunning()) {\n      await PeppyMeter.restart({ policy: 'configChanged' });\n    }\n  }\n}\n\nexport = ControllerPeppyAlsaPipe;\n"]}